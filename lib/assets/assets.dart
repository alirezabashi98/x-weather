// Generated by Flutter Assets

// ignore_for_file: unused_field, camel_case_types, non_constant_identifier_names, library_private_types_in_public_api

import 'package:flutter/foundation.dart';
import 'package:flutter/widgets.dart';
        
class Assets extends StatelessWidget {
  final AssetsData assets;
  final Widget child;

  const Assets({
    super.key,
    required this.assets,
    required this.child,
  });

  static AssetsData of(BuildContext context) {
    final widget = context.dependOnInheritedWidgetOfExactType<_InheritedAssets>();
    return widget?.assets ?? AssetsData.light();
  }

  @override
  Widget build(BuildContext context) {
    return _InheritedAssets(
      assets: assets,
      child: child,
    );
  }
}

class _InheritedAssets extends InheritedWidget {
  final AssetsData assets;

  const _InheritedAssets({
    required this.assets,
    required super.child,
  });

  @override
  bool updateShouldNotify(covariant _InheritedAssets oldWidget) => assets != oldWidget.assets;
}

class AssetsData {
  static AssetsData? _light;
  static AssetsData? _dark;

  factory AssetsData.light() => _light ??= AssetsData._(brightness: Brightness.light);
  factory AssetsData.dark() => _dark ??= AssetsData._(brightness: Brightness.dark);
  factory AssetsData.brightness(Brightness brightness) => brightness == Brightness.light ? AssetsData.light() : AssetsData.dark();

  final Brightness _brightness;

  AssetsData._({
    required Brightness brightness,
  })  : _brightness = brightness,
        fonts = _assets_fonts_dart._(brightness: brightness),
        images = _assets_images_dart._(brightness: brightness);

  final _assets_fonts_dart fonts;
  final _assets_images_dart images;
}

class _assets_fonts_dart {
  final Brightness _brightness;

  _assets_fonts_dart._({
    required Brightness brightness,
  })  : _brightness = brightness;

  final sf_pro_display_regular_ttf = 'assets/fonts/sf_pro_display_regular.ttf';
}

class _assets_images_dart {
  final Brightness _brightness;

  _assets_images_dart._({
    required Brightness brightness,
  })  : _brightness = brightness;

  final bg_item_weather_png = 'assets/images/bg_item_weather.png';
  final ic_01d_png = 'assets/images/ic_01d.png';
  final ic_01n_png = 'assets/images/ic_01n.png';
  final ic_02d_png = 'assets/images/ic_02d.png';
  final ic_02n_png = 'assets/images/ic_02n.png';
  final ic_03d_png = 'assets/images/ic_03d.png';
  final ic_03n_png = 'assets/images/ic_03n.png';
  final ic_04d_png = 'assets/images/ic_04d.png';
  final ic_04n_png = 'assets/images/ic_04n.png';
  final ic_09d_png = 'assets/images/ic_09d.png';
  final ic_09n_png = 'assets/images/ic_09n.png';
  final ic_10d_png = 'assets/images/ic_10d.png';
  final ic_10n_png = 'assets/images/ic_10n.png';
  final ic_11d_png = 'assets/images/ic_11d.png';
  final ic_11n_png = 'assets/images/ic_11n.png';
  final ic_13d_png = 'assets/images/ic_13d.png';
  final ic_13n_png = 'assets/images/ic_13n.png';
  final ic_50d_png = 'assets/images/ic_50d.png';
  final ic_50n_png = 'assets/images/ic_50n.png';
  final ic_error_png = 'assets/images/ic_error.png';
  final n_png = 'assets/images/n.png';
}
